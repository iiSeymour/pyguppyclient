#!/usr/bin/env python3

"""
$ pyguppyclient -t 8 dna_r9.4.1_450bps_fast reads_dirs > out.fastq
"""

import sys
import argparse
from time import time

from pyguppyclient import Caller, get_fast5_files, write_fastq


def process(read, called, lock):
    """
    Example callback function for the Caller that writes fastq files
    """
    with lock:
        write_fastq(read.read_id, called.seq, called.qual, sys.stdout)


def main(args):
    start = time()
    caller = Caller(
        config=args.config,
        port=args.port,
        callback=process,
        procs=args.threads,
        inflight=args.max_reads_per_process
    )
    files = get_fast5_files(args.directory, recursive=args.recursive)
    samples = caller.basecall(files)
    duration = time() - start

    sys.stderr.write("Files        %s\n" % len(files))
    sys.stderr.write("Duration     %.3f\n" % duration)
    sys.stderr.write("Samples      %s\n" % samples)
    sys.stderr.write("Msamples/s   %5.3f\n" % (samples / duration / 1e6))


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='pyguppyclient')
    parser.add_argument('config')
    parser.add_argument('directory')
    parser.add_argument('-p', '--port', type=int, default=5555)
    parser.add_argument('-t', '--threads', type=int, default=1)
    parser.add_argument('-r', '--recursive', action='store_true', default=False)
    parser.add_argument('-m', '--max_reads_per_process', type=int, default=250)
    main(parser.parse_args())
